# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: NodeTool@0
  inputs:
    versionSpec: '8.x'
  displayName: 'Install Node.js'
  condition: eq(variables.webChanged, 'true')

- script: |
    npm install
    npm run test

- task: SonarQubePrepare@4
  inputs:
    SonarQube: 'test-sonarqube'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'earthquake-api'
    cliProjectName: 'earthquake-api'
    cliProjectVersion: '1.0.$(Build.BuildId)'
    cliSources: './src'

- task: SonarQubePublish@4
  inputs:
    pollingTimeoutSec: '300'
  
- task: Docker@2
  inputs:
    containerRegistry: 'tsregistryconnection'
    tags: 'latest'
    repository: 'test/earthquake'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'

- task: CopyFiles@2
  inputs:
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- publish: $(Build.ArtifactStagingDirectory)
  artifact: helm
